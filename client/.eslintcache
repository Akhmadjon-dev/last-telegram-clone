[{"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\index.js":"1","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Top\\index.js":"2","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Chat\\chat.js":"3","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Sidebar\\index.js":"4","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\App.js":"5","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Sidebar\\User.js":"6","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\store\\context\\auth.js":"7","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Auth\\SignIn.js":"8","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Auth\\signUp.js":"9","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Info\\index.js":"10"},{"size":442,"mtime":1607423402122,"results":"11","hashOfConfig":"12"},{"size":576,"mtime":1607489049849,"results":"13","hashOfConfig":"12"},{"size":3303,"mtime":1608018055824,"results":"14","hashOfConfig":"12"},{"size":796,"mtime":1607756682828,"results":"15","hashOfConfig":"12"},{"size":2133,"mtime":1608015051723,"results":"16","hashOfConfig":"12"},{"size":875,"mtime":1607756206625,"results":"17","hashOfConfig":"12"},{"size":133,"mtime":1607956709662,"results":"18","hashOfConfig":"12"},{"size":2178,"mtime":1607956412130,"results":"19","hashOfConfig":"12"},{"size":1998,"mtime":1607953840906,"results":"20","hashOfConfig":"12"},{"size":5259,"mtime":1607958483175,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1bsd0up",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\index.js",[],["47","48"],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Top\\index.js",[],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Chat\\chat.js",["49","50"],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Sidebar\\index.js",["51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport User from \"./User\";\r\nimport \"./style.css\";\r\n\r\nconst Contact = ({ data, setId }) => {\r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"contact__header\">\r\n        <div className=\"contact__icon\">\r\n          <GiHamburgerMenu />\r\n        </div>\r\n        <div className=\"contact__search\">\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n          <MdClose className=\"contact__close\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"contact__user\">\r\n        {data.map((user) => (\r\n          <User Click={setId} data={user} key={user._id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n",["53","54"],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\App.js",["55","56"],"import { useContext, useEffect, useState, Provider } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Top from \"./Top/index\";\nimport Contact from \"./Sidebar/index\";\nimport Chat from \"./Chat/chat\";\nimport Info from \"./Info\";\nimport UserContext from \"../store/context/auth\";\nimport axios from \"../utils/axios\";\nimport SignIn from \"./Auth/SignIn\";\nimport SignUp from \"./Auth/signUp\";\nimport \"./App.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  const [auth, setAuth] = useState();\n  const [infoIsShown, setInfoIsShown] = useState(true);\n\n  useEffect(() => {\n    axios.get(\"/users\").then((res) => {\n      setUsers(res.data);\n    });\n  }, []);\n\n  const getUserId = (id) => {\n    setUserId(id);\n    console.log(id);\n    console.log(\"clicked\");\n  };\n\n  const updateContext = (data) => {\n    setAuth(data);\n  };\n\n\n  if (auth) {\n    const main = (\n      <div className=\"app__main\">\n        <Contact setId={getUserId} data={users} />\n        <Chat isInfo={setInfoIsShown} data={{ userId, infoIsShown }} />\n        {infoIsShown && <Info data={infoIsShown} isInfo={setInfoIsShown} />}\n      </div>\n    );\n    return (\n      <UserContext.Provider value={{ user: auth, updateContext }}>\n        <BrowserRouter>\n          <div className=\"app\">\n            <Top />\n            <Switch>\n              <Route key=\"main\" path=\"/\" exact render={() => main} />\n              <Redirect to=\"/\" key=\"defaultPath\" />,\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </UserContext.Provider>\n    );\n  } else {\n    return (\n      <UserContext.Provider value={{ auth, updateContext }}>\n        <div className=\"app\">\n          <BrowserRouter>\n            <Top />\n            <Switch>\n              <Route key=\"signIn\" path=\"/sign-in\" exact component={SignIn} />,\n              <Route key=\"signUp\" path=\"/sign-up\" exact component={SignUp} />,\n              <Redirect to=\"/sign-in\" key=\"defaultPath\" />,\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </UserContext.Provider>\n    );\n  }\n}\nexport default App;\n","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Sidebar\\User.js",[],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\store\\context\\auth.js",["57"],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Auth\\SignIn.js",["58"],"import React, { useContext, useState } from \"react\";\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../../store/context/auth\";\r\nimport axios from \"../../utils/axios\";\r\nimport \"./style.css\";\r\nconst SignIn = () => {\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n  const [auth, setAuth] = useState({});\r\n  const store = useContext(UserContext);\r\n  const inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n  const formHandler = (e) => {\r\n    e.preventDefault();\r\n    let formData = {\r\n      email: user.email,\r\n      password: user.password,\r\n    };\r\n    axios\r\n      .post(\"/auth/sign-in\", formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setAuth(res.data.payload);\r\n        store.updateContext(res.data.payload);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    console.log(user);\r\n  };\r\n  return (\r\n    <div className=\"signIn\">\r\n      <div className=\"signIn__header\">\r\n        <Link to=\"/\" className=\"signIn__back-icon\">\r\n          <IoMdArrowRoundBack />\r\n        </Link>\r\n        <h3>SETTINGS</h3>\r\n      </div>\r\n      <div className=\"signIn__container\">\r\n        <div>\r\n          <h3>Your email and password</h3>\r\n          <p>Please confirm your email and enter password</p>\r\n          <form onSubmit={formHandler} className=\"signIn__form\">\r\n            <input\r\n              onChange={inputHandler}\r\n              className=\"signIn__input\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <input\r\n              onChange={inputHandler}\r\n              className=\"signIn__input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter password \"\r\n            />\r\n            <button className=\"signIn__btn\" type=\"submit\">\r\n              NEXT\r\n            </button>\r\n          </form>\r\n          <span>\r\n            Quick <Link to=\"/sign-up\">Sign up</Link>. If you don't have an\r\n            account.\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Auth\\signUp.js",[],"C:\\Users\\ahmad\\Desktop\\telegram\\client\\src\\container\\Info\\index.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":11,"nodeType":"65","messageId":"66","endLine":16,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":33,"column":6,"nodeType":"69","endLine":33,"endColumn":12,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"72","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"59","replacedBy":"73"},{"ruleId":"61","replacedBy":"74"},{"ruleId":"63","severity":1,"message":"75","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":20},{"ruleId":"63","severity":1,"message":"76","line":1,"column":43,"nodeType":"65","messageId":"66","endLine":1,"endColumn":51},{"ruleId":"63","severity":1,"message":"75","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":27},{"ruleId":"63","severity":1,"message":"77","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'msg'. Either include them or remove the dependency array.","ArrayExpression",["80"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["78"],["79"],"'useContext' is defined but never used.","'Provider' is defined but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [_id, data, msg]",{"range":"83","text":"84"},[1106,1112],"[_id, data, msg]"]